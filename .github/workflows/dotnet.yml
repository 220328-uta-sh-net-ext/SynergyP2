name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  sonarbuild:
  
    runs-on: windows-latest
    
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - uses: actions/checkout@v2
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore Growth/GrowthAPI
    - name: Test
      run: dotnet test --verbosity normal Growth
    
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"220328-uta-sh-net-ext_SynergyP2" /o:"220328-uta-sh-net-ext" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build Growth
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
  docker-image-build:
    runs-on: ubuntu-latest
    needs: sonarbuild
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.0.0
    
    - name: Docker Login
      uses: docker/login-action@v2.0.0
      with:
        username: ${{secrets.DOCKER_USER}}
        password: ${{secrets.DOCKER_IMAGE_TOKEN}}
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.0.0
      with:
        context: Growth
        file: Growth/GrowthAPI/Dockerfile
        push: true
        tags: index.docker.io/${{secrets.DOCKER_USER}}/growthapi:latest
        #${{github.sha}} uses a specific image
  deploy:
    runs-on: ubuntu-latest
    needs: docker-image-build
    steps:
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: GrowthAPI        
        publish-profile: ${{secrets.AZURE_PUBLISH_SETTINGS}}
        images: ${{secrets.DOCKER_USER}}/growthapi:latest




      
